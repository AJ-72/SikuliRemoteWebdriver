{"name":"Sikuliremotewebdriver","tagline":"Remote driver version of sikuli driver. ","body":"SikuliRemoteWebdriver\r\n=====================\r\n\r\nThis is the remote driver version of sikuliwebdriver. This works similar to sikulifirefoxdriver\r\n(https://code.google.com/p/sikuli-api/wiki/SikuliWebDriver). \r\n\r\nKey differences from sikuliwebdriver.\r\n\r\n1. Works with remote webdriver - so all browsers that are supported by selenium are supported by sikuliremotedriver as well\r\n2. Has a new method to get the corresponding webelment of an image. You can do soemthing like\r\n    WebElement we = sikuliremotedriverobject.findImage(url of image)\r\n    we.getText();\r\n3. Scrolls through the entire page looking for the element rather than just the area displayed in view port.\r\n\r\nExample program:\r\n\r\n      SikuliRemoteWebDriver driver = new SikuliRemoteWebDriver(DesiredCapabilities.chrome());\r\n      driver.get(\"http://www.sears.com\");\r\n\t\t\tdriver.findElementById(\"keyword\").sendKeys(\"blender\");\r\n\t\t\tImageElement image =  driver.findImageElement(new URL(\"file:///D:/sikuli learning/RemoteSikuli/search.png\"));\r\n\t\t\timage.getAsWebElement().click();\r\n\t\t\tImageElement image1 =  driver.findImageElement(new URL(\"file:///D:/sikuli learning/RemoteSikuli/blender.png\"));\r\n\t\t\timage1.click();\r\n\r\nNote:-\r\nThis is using old the Sikuli 1.1 jar.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}